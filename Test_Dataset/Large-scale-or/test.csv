ID,Type by size, Type by problem,Query,Dataset_address,Label
1,L,TP,"Amazon operates multiple distribution centers that are responsible for supplying essential goods daily to various customer groups. The daily demand for each customer group is provided in ""customer_demand.csv"", while the daily supply capacity of the distribution centers is detailed in ""supply_capacity.csv"". The transportation cost per unit of goods from each distribution center to each customer group is recorded in ""transportation_costs.csv"". The objective is to determine the quantity of goods to be transported from each distribution center to each customer group, ensuring that all customer demands are met without exceeding the supply capacity of any distribution center, while minimizing the total transportation cost.","Test_Dataset/Large-scale-or/TP_testing/TP1/customer_demand.csv
Test_Dataset/Large-scale-or/TP_testing/TP1/supply_capacity.csv
Test_Dataset/Large-scale-or/TP_testing/TP1/transportation_costs.csv","Minimize
159.8376549585821 x_0_0 + 6.42633790337285 x_0_1 
+ 7.582243029047409 x_0_2 + 99.52254454692138 x_0_3 
+ 135.1682991866501 x_0_4 + 7.590909409397181 x_0_5 
+ 2.365466705257951 x_0_6 + 7.575274779934459 x_0_7 
+ 991.7798969083236 x_0_8 + 11.46415501944649 x_0_9 
+ 69.35418474260145 x_0_10 + 135.8827416239006 x_0_11 
+ 46.86156560390732 x_0_12 + 7.591284332304382 x_0_13 
+ 159.4103427749794 x_0_14 + 173.2178262613133 x_0_15 
+ 7.560918384716748 x_0_16 + 7.662619554028876 x_0_17 
+ 0.106557017102239 x_1_0 + 8.54894494648944 x_1_1 
+ 0.0568789303102096 x_1_2 + 212.0749581317349 x_1_3 
+ 1.040260758093917 x_1_4 + 0.0652083182686696 x_1_5 
+ 194.7110872056446 x_1_6 + 0.0494806010515883 x_1_7 
+ 839.3507562340868 x_1_8 + 89.40158875493893 x_1_9 
+ 217.734770417457 x_1_10 + 68.76890997932357 x_1_11 
+ 141.2010329566291 x_1_12 + 0.0656502397018673 x_1_13 
+ 1.175025378373934 x_1_14 + 132.5339928739873 x_1_15 
+ 1.265678945608808 x_1_16 + 0.1438122345864802 x_1_17 
+ 0.0712113296922013 x_2_0 + 180.3996497782258 x_2_1 
+ 0.2622972046955685 x_2_2 + 182.8636027839307 x_2_3 
+ 1.735658687947286 x_2_4 + 0.0003457967259966 x_2_5 
+ 9.336781626424909 x_2_6 + 0.2872050597506193 x_2_7 
+ 39.90767148745277 x_2_8 + 4.201696016865375 x_2_9 
+ 187.7967243198345 x_2_10 + 3.305062490121152 x_2_11 
+ 142.3034402922805 x_2_12 + 0.0127896657555688 x_2_13 
+ 0.003164519819296 x_2_14 + 113.5696673797779 x_2_15 
+ 0.0721377516383126 x_2_16 + 1.724132015627177 x_2_17 
+ 1.545538289798338 x_3_0 + 180.0783626802875 x_3_1 
+ 0.0240569354592471 x_3_2 + 182.8162278499576 x_3_3 
+ 0.096483806717389 x_3_4 + 0.3280567912491164 x_3_5 
+ 167.9434994107972 x_3_6 + 0.3447071113014559 x_3_7 
+ 838.3178615319802 x_3_8 + 75.88119317030038 x_3_9 
+ 218.9576990348591 x_3_10 + 3.289687537275121 x_3_11 
+ 165.7629043453888 x_3_12 + 0.0150577528830554 x_3_13 
+ 0.0155049780044053 x_3_14 + 132.2286866824275 x_3_15 
+ 0.0807047191286277 x_3_16 + 1.535853913814202 x_3_17 
+ 16.41408384079902 x_4_0 + 20.38570035418408 x_4_1 
+ 16.41317275653258 x_4_2 + 478.0390070489655 x_4_3 
+ 296.930752792446 x_4_4 + 295.204481832446 x_4_5 
+ 535.0402811142731 x_4_6 + 295.472802436343 x_4_7 
+ 29.54319318207345 x_4_8 + 259.9306953789963 x_4_9 
+ 477.9714035932095 x_4_10 + 16.9573029226456 x_4_11 
+ 476.9792189335827 x_4_12 + 295.1902706128683 x_4_13 
+ 344.4023165803424 x_4_14 + 311.0615468174578 x_4_15 
+ 345.603099976026 x_4_16 + 16.31794206958455 x_4_17 
+ 158.9313402279755 x_5_0 + 27.84640783409313 x_5_1 
+ 7.505708371284356 x_5_2 + 237.3730089947848 x_5_3 
+ 157.3399415011591 x_5_4 + 7.502126992568333 x_5_5 
+ 8.887771023202468 x_5_6 + 134.897501752937 x_5_7 
+ 830.1122041518627 x_5_8 + 206.4798703290897 x_5_9 
+ 202.4405719795156 x_5_10 + 88.80510777650917 x_5_11 
+ 98.47373975154062 x_5_12 + 7.501579667106725 x_5_13 
+ 157.5423557636974 x_5_14 + 77.93428784134284 x_5_15 
+ 7.535086968463016 x_5_16 + 7.514549419003527 x_5_17 
+ 0.1072029141202719 x_6_0 + 154.1398544913415 x_6_1 
+ 0.8852806020632731 x_6_2 + 183.150619460247 x_6_3 
+ 0.1196790346494559 x_6_4 + 0.0371960874979214 x_6_5 
+ 196.2092542758506 x_6_6 + 0.8877813480601408 x_6_7 
+ 718.5329214110352 x_6_8 + 4.219766244382137 x_6_9 
+ 219.2325360920747 x_6_10 + 58.92384746650274 x_6_11 
+ 142.1064847721028 x_6_12 + 0.7605337317228869 x_6_13 
+ 0.6661979296228859 x_6_14 + 6.272573102127474 x_6_15 
+ 1.917860062684089 x_6_16 + 0.0721547548345918 x_6_17 
+ 2.220199373580392 x_7_0 + 227.1515448281052 x_7_1 
+ 47.95926180328313 x_7_2 + 220.0572716686742 x_7_3 
+ 41.14162586783218 x_7_4 + 48.08129672994959 x_7_5 
+ 215.2156725907926 x_7_6 + 41.31064990425558 x_7_7 
+ 804.8838110396675 x_7_8 + 47.1095086969049 x_7_9 
+ 203.7998107755676 x_7_10 + 5.591984830221476 x_7_11 
+ 9.653631540812064 x_7_12 + 48.09583337811525 x_7_13 
+ 41.21498273379365 x_7_14 + 8.431638784802882 x_7_15 
+ 2.247296057577594 x_7_16 + 2.29301861820296 x_7_17 
+ 0.0593940168431974 x_8_0 + 180.7637642245803 x_8_1 
+ 0.0245032552848036 x_8_2 + 213.5491059653967 x_8_3 
+ 1.908865604731188 x_8_4 + 0.3778127261007191 x_8_5 
+ 9.350361928257238 x_8_6 + 0.5760978375171601 x_8_7 
+ 718.0228698036685 x_8_8 + 87.85660384116036 x_8_9 
+ 188.0412460602118 x_8_10 + 69.74234177397213 x_8_11 
+ 142.6191383255864 x_8_12 + 0.3816975088257651 x_8_13 
+ 0.0180311498292083 x_8_14 + 132.7043821674308 x_8_15 
+ 1.526570975150565 x_8_16 + 0.0746543857357613 x_8_17 
+ 76.00470976255896 x_9_0 + 254.7550116921857 x_9_1 
+ 66.29042049668411 x_9_2 + 223.5475387800311 x_9_3 
+ 66.19918714920598 x_9_4 + 3.689578012149406 x_9_5 
+ 193.9206161461082 x_9_6 + 66.49006559646251 x_9_7 
+ 37.59695422866174 x_9_8 + 46.74635938361848 x_9_9 
+ 11.81245937209094 x_9_10 + 146.5340049008406 x_9_11 
+ 224.1012798612482 x_9_12 + 66.42589614744958 x_9_13 
+ 77.48419913522422 x_9_14 + 9.836931402779376 x_9_15 
+ 76.49877965864712 x_9_16 + 3.69855862173304 x_9_17 
+ 1349.794629806349 x_10_0 + 1031.05780187436 x_10_1 
+ 1348.978969975896 x_10_2 + 1179.235562142268 x_10_3 
+ 1347.625644089478 x_10_4 + 64.24351194472719 x_10_5 
+ 55.57123247183962 x_10_6 + 1156.114313238807 x_10_7 
+ 103.8454330942644 x_10_8 + 1433.228132588181 x_10_9 
+ 1145.618490038978 x_10_10 + 61.99837422557616 x_10_11 
+ 1183.934457497752 x_10_12 + 1156.386534759635 x_10_13 
+ 1156.383640245391 x_10_14 + 62.76824918418602 x_10_15 
+ 64.22589773317051 x_10_16 + 1157.51304425127 x_10_17 
+ 1.435340983528516 x_11_0 + 8.636406888143583 x_11_1 
+ 0.07382328011512659 x_11_2 + 10.21588102496733 x_11_3 
+ 3.238433874714678 x_11_4 + 0.06455975862127999 x_11_5 
+ 9.399638194835504 x_11_6 + 1.683591635212713 x_11_7 
+ 717.2136284740286 x_11_8 + 4.144028420494834 x_11_9 
+ 220.4162688516152 x_11_10 + 3.341426444124818 x_11_11 
+ 7.968141361093227 x_11_12 + 1.348626003227619 x_11_13 
+ 1.161106948033174 x_11_14 + 132.6106833006416 x_11_15 
+ 0.1139948850006557 x_11_16 + 0.7753196305628699 x_11_17 
+ 314.2033136744687 x_12_0 + 181.3919171146923 x_12_1 
+ 268.5340851497754 x_12_2 + 10.0142344242029 x_12_3 
+ 312.0487129803631 x_12_4 + 313.3987946898658 x_12_5 
+ 163.8945867744889 x_12_6 + 14.90936220443586 x_12_7 
+ 1151.4600713516 x_12_8 + 342.921909415344 x_12_9 
+ 131.264474391335 x_12_10 + 265.6140941131609 x_12_11 
+ 147.3860625741329 x_12_12 + 268.6290897103059 x_12_13 
+ 268.6276348293388 x_12_14 + 297.2880149470527 x_12_15 
+ 268.4322863390603 x_12_16 + 14.98135781840737 x_12_17 
+ 5.752413335760744 x_13_0 + 7.158798027896069 x_13_1 
+ 5.732884238005308 x_13_2 + 89.16252252077103 x_13_3 
+ 5.654481175796923 x_13_4 + 120.6089498609263 x_13_5 
+ 75.57187554552677 x_13_6 + 5.727488142081072 x_13_7 
+ 947.7343446508175 x_13_8 + 9.423526828781656 x_13_9 
+ 4.694117269797094 x_13_10 + 5.410690679167998 x_13_11 
+ 77.80702229606479 x_13_12 + 120.6201102138873 x_13_13 
+ 5.743372251771093 x_13_14 + 9.007468301222858 x_13_15 
+ 5.703072947981375 x_13_16 + 5.820650534912412 x_13_17 
+ 654.160873808039 x_14_0 + 44.28920565984101 x_14_1 
+ 764.1914776236828 x_14_2 + 43.60146761460413 x_14_3 
+ 655.978917172618 x_14_4 + 764.1106991806364 x_14_5 
+ 799.7431966296571 x_14_6 + 36.39989154831688 x_14_7 
+ 100.3274954635301 x_14_8 + 32.21297721494791 x_14_9 
+ 953.331898113182 x_14_10 + 820.8639813333887 x_14_11 
+ 929.4945220448218 x_14_12 + 654.9523796493896 x_14_13 
+ 36.38623794626697 x_14_14 + 707.240038428002 x_14_15 
+ 655.0223395721506 x_14_16 + 36.33495494783298 x_14_17 
+ 10.83401484064441 x_15_0 + 3.096409145258592 x_15_1 
+ 226.1806670151862 x_15_2 + 256.0839847043925 x_15_3 
+ 193.8293975018054 x_15_4 + 193.771467026974 x_15_5 
+ 209.2455767627632 x_15_6 + 193.6656772433566 x_15_7 
+ 1008.903512858896 x_15_8 + 14.50639918440926 x_15_9 
+ 255.8997681034084 x_15_10 + 156.7080093063926 x_15_11 
+ 154.2224712052248 x_15_12 + 10.76441599354317 x_15_13 
+ 10.76495047758324 x_15_14 + 106.5286300669261 x_15_15 
+ 226.9333905913352 x_15_16 + 193.7904489596303 x_15_17 
+ 16.40964133862146 x_16_0 + 20.38503370813976 x_16_1 
+ 16.40876181217081 x_16_2 + 26.55338043764668 x_16_3 
+ 346.3265710469919 x_16_4 + 295.1251384672749 x_16_5 
+ 25.47461096157467 x_16_6 + 295.3935058595557 x_16_7 
+ 29.53860445789224 x_16_8 + 259.818743184237 x_16_9 
+ 477.9097617744408 x_16_10 + 16.95457037355671 x_16_11 
+ 22.71104797475001 x_16_12 + 295.1109335243797 x_16_13 
+ 344.3097507547874 x_16_14 + 14.81152079012192 x_16_15 
+ 16.45286087626316 x_16_16 + 342.5842466669966 x_16_17 
+ 837.3389315505575 x_17_0 + 47.44491934576151 x_17_1 
+ 39.91671898599663 x_17_2 + 47.69157661529261 x_17_3 
+ 39.97592675769934 x_17_4 + 718.4077185299378 x_17_5 
+ 870.0007174209971 x_17_6 + 718.6665924030137 x_17_7 
+ 0.0225819370919379 x_17_8 + 644.5642349234957 x_17_9 
+ 49.33551842366003 x_17_10 + 42.41108954504367 x_17_11 
+ 860.7092331202016 x_17_12 + 39.91145534315851 x_17_13 
+ 718.4076272709384 x_17_14 + 759.8096548716817 x_17_15 
+ 718.6046793265715 x_17_16 + 717.3748902497082 x_17_17 
Subject To
demand_constraint: x_0_0 + x_1_0 + x_2_0 + x_3_0 + x_4_0 + x_5_0 + x_6_0 
+ x_7_0 + x_8_0 + x_9_0 + x_10_0 + x_11_0 + x_12_0 + x_13_0 + x_14_0 
+ x_15_0 + x_16_0 + x_17_0 >= 4415
x_0_1 + x_1_1 + x_2_1 + x_3_1 + x_4_1 + x_5_1 + x_6_1 + x_7_1 + x_8_1 
+ x_9_1 + x_10_1 + x_11_1 + x_12_1 + x_13_1 + x_14_1 + x_15_1 + x_16_1 
+ x_17_1 >= 5430
x_0_2 + x_1_2 + x_2_2 + x_3_2 + x_4_2 + x_5_2 + x_6_2 + x_7_2 + x_8_2 
+ x_9_2 + x_10_2 + x_11_2 + x_12_2 + x_13_2 + x_14_2 + x_15_2 + x_16_2 
+ x_17_2 >= 81
x_0_3 + x_1_3 + x_2_3 + x_3_3 + x_4_3 + x_5_3 + x_6_3 + x_7_3 + x_8_3 
+ x_9_3 + x_10_3 + x_11_3 + x_12_3 + x_13_3 + x_14_3 + x_15_3 + x_16_3 
+ x_17_3 >= 146
x_0_4 + x_1_4 + x_2_4 + x_3_4 + x_4_4 + x_5_4 + x_6_4 + x_7_4 + x_8_4 
+ x_9_4 + x_10_4 + x_11_4 + x_12_4 + x_13_4 + x_14_4 + x_15_4 + x_16_4 
+ x_17_4 >= 10638
x_0_5 + x_1_5 + x_2_5 + x_3_5 + x_4_5 + x_5_5 + x_6_5 + x_7_5 + x_8_5 
+ x_9_5 + x_10_5 + x_11_5 + x_12_5 + x_13_5 + x_14_5 + x_15_5 + x_16_5 
+ x_17_5 >= 1663
x_0_6 + x_1_6 + x_2_6 + x_3_6 + x_4_6 + x_5_6 + x_6_6 + x_7_6 + x_8_6 
+ x_9_6 + x_10_6 + x_11_6 + x_12_6 + x_13_6 + x_14_6 + x_15_6 + x_16_6 
+ x_17_6 >= 151
x_0_7 + x_1_7 + x_2_7 + x_3_7 + x_4_7 + x_5_7 + x_6_7 + x_7_7 + x_8_7 
+ x_9_7 + x_10_7 + x_11_7 + x_12_7 + x_13_7 + x_14_7 + x_15_7 + x_16_7 
+ x_17_7 >= 185
x_0_8 + x_1_8 + x_2_8 + x_3_8 + x_4_8 + x_5_8 + x_6_8 + x_7_8 + x_8_8 
+ x_9_8 + x_10_8 + x_11_8 + x_12_8 + x_13_8 + x_14_8 + x_15_8 + x_16_8 
+ x_17_8 >= 1917
x_0_9 + x_1_9 + x_2_9 + x_3_9 + x_4_9 + x_5_9 + x_6_9 + x_7_9 + x_8_9 
+ x_9_9 + x_10_9 + x_11_9 + x_12_9 + x_13_9 + x_14_9 + x_15_9 + x_16_9 
+ x_17_9 >= 4489
x_0_10 + x_1_10 + x_2_10 + x_3_10 + x_4_10 + x_5_10 + x_6_10 + x_7_10 
+ x_8_10 + x_9_10 + x_10_10 + x_11_10 + x_12_10 + x_13_10 + x_14_10 
+ x_15_10 + x_16_10 + x_17_10 >= 76
x_0_11 + x_1_11 + x_2_11 + x_3_11 + x_4_11 + x_5_11 + x_6_11 + x_7_11 
+ x_8_11 + x_9_11 + x_10_11 + x_11_11 + x_12_11 + x_13_11 + x_14_11 
+ x_15_11 + x_16_11 + x_17_11 >= 2529
x_0_12 + x_1_12 + x_2_12 + x_3_12 + x_4_12 + x_5_12 + x_6_12 + x_7_12 
+ x_8_12 + x_9_12 + x_10_12 + x_11_12 + x_12_12 + x_13_12 + x_14_12 
+ x_15_12 + x_16_12 + x_17_12 >= 2136
x_0_13 + x_1_13 + x_2_13 + x_3_13 + x_4_13 + x_5_13 + x_6_13 + x_7_13 
+ x_8_13 + x_9_13 + x_10_13 + x_11_13 + x_12_13 + x_13_13 + x_14_13 
+ x_15_13 + x_16_13 + x_17_13 >= 909
x_0_14 + x_1_14 + x_2_14 + x_3_14 + x_4_14 + x_5_14 + x_6_14 + x_7_14 
+ x_8_14 + x_9_14 + x_10_14 + x_11_14 + x_12_14 + x_13_14 + x_14_14 
+ x_15_14 + x_16_14 + x_17_14 >= 316
x_0_15 + x_1_15 + x_2_15 + x_3_15 + x_4_15 + x_5_15 + x_6_15 + x_7_15 
+ x_8_15 + x_9_15 + x_10_15 + x_11_15 + x_12_15 + x_13_15 + x_14_15 
+ x_15_15 + x_16_15 + x_17_15 >= 70
x_0_16 + x_1_16 + x_2_16 + x_3_16 + x_4_16 + x_5_16 + x_6_16 + x_7_16 
+ x_8_16 + x_9_16 + x_10_16 + x_11_16 + x_12_16 + x_13_16 + x_14_16 
+ x_15_16 + x_16_16 + x_17_16 >= 1456
x_0_17 + x_1_17 + x_2_17 + x_3_17 + x_4_17 + x_5_17 + x_6_17 + x_7_17 
+ x_8_17 + x_9_17 + x_10_17 + x_11_17 + x_12_17 + x_13_17 + x_14_17 
+ x_15_17 + x_16_17 + x_17_17 >= 2711
capacity_constraint: x_0_0 + x_0_1 + x_0_2 + x_0_3 + x_0_4 + x_0_5 + x_0_6 
+ x_0_7 + x_0_8 + x_0_9 + x_0_10 + x_0_11 + x_0_12 + x_0_13 + x_0_14 
+ x_0_15 + x_0_16 + x_0_17 <= 5963
x_1_0 + x_1_1 + x_1_2 + x_1_3 + x_1_4 + x_1_5 + x_1_6 + x_1_7 + x_1_8 
+ x_1_9 + x_1_10 + x_1_11 + x_1_12 + x_1_13 + x_1_14 + x_1_15 + x_1_16 
+ x_1_17 <= 702
x_2_0 + x_2_1 + x_2_2 + x_2_3 + x_2_4 + x_2_5 + x_2_6 + x_2_7 + x_2_8 
+ x_2_9 + x_2_10 + x_2_11 + x_2_12 + x_2_13 + x_2_14 + x_2_15 + x_2_16 
+ x_2_17 <= 350
x_3_0 + x_3_1 + x_3_2 + x_3_3 + x_3_4 + x_3_5 + x_3_6 + x_3_7 + x_3_8 
+ x_3_9 + x_3_10 + x_3_11 + x_3_12 + x_3_13 + x_3_14 + x_3_15 + x_3_16 
+ x_3_17 <= 11483
x_4_0 + x_4_1 + x_4_2 + x_4_3 + x_4_4 + x_4_5 + x_4_6 + x_4_7 + x_4_8 
+ x_4_9 + x_4_10 + x_4_11 + x_4_12 + x_4_13 + x_4_14 + x_4_15 + x_4_16 
+ x_4_17 <= 6585
x_5_0 + x_5_1 + x_5_2 + x_5_3 + x_5_4 + x_5_5 + x_5_6 + x_5_7 + x_5_8 
+ x_5_9 + x_5_10 + x_5_11 + x_5_12 + x_5_13 + x_5_14 + x_5_15 + x_5_16 
+ x_5_17 <= 11330
x_6_0 + x_6_1 + x_6_2 + x_6_3 + x_6_4 + x_6_5 + x_6_6 + x_6_7 + x_6_8 
+ x_6_9 + x_6_10 + x_6_11 + x_6_12 + x_6_13 + x_6_14 + x_6_15 + x_6_16 
+ x_6_17 <= 207
x_7_0 + x_7_1 + x_7_2 + x_7_3 + x_7_4 + x_7_5 + x_7_6 + x_7_7 + x_7_8 
+ x_7_9 + x_7_10 + x_7_11 + x_7_12 + x_7_13 + x_7_14 + x_7_15 + x_7_16 
+ x_7_17 <= 788
x_8_0 + x_8_1 + x_8_2 + x_8_3 + x_8_4 + x_8_5 + x_8_6 + x_8_7 + x_8_8 
+ x_8_9 + x_8_10 + x_8_11 + x_8_12 + x_8_13 + x_8_14 + x_8_15 + x_8_16 
+ x_8_17 <= 6967
x_9_0 + x_9_1 + x_9_2 + x_9_3 + x_9_4 + x_9_5 + x_9_6 + x_9_7 + x_9_8 
+ x_9_9 + x_9_10 + x_9_11 + x_9_12 + x_9_13 + x_9_14 + x_9_15 + x_9_16 
+ x_9_17 <= 43
x_10_0 + x_10_1 + x_10_2 + x_10_3 + x_10_4 + x_10_5 + x_10_6 + x_10_7 
+ x_10_8 + x_10_9 + x_10_10 + x_10_11 + x_10_12 + x_10_13 + x_10_14 
+ x_10_15 + x_10_16 + x_10_17 <= 1137
x_11_0 + x_11_1 + x_11_2 + x_11_3 + x_11_4 + x_11_5 + x_11_6 + x_11_7 
+ x_11_8 + x_11_9 + x_11_10 + x_11_11 + x_11_12 + x_11_13 + x_11_14 
+ x_11_15 + x_11_16 + x_11_17 <= 1553
x_12_0 + x_12_1 + x_12_2 + x_12_3 + x_12_4 + x_12_5 + x_12_6 + x_12_7 
+ x_12_8 + x_12_9 + x_12_10 + x_12_11 + x_12_12 + x_12_13 + x_12_14 
+ x_12_15 + x_12_16 + x_12_17 <= 257
x_13_0 + x_13_1 + x_13_2 + x_13_3 + x_13_4 + x_13_5 + x_13_6 + x_13_7 
+ x_13_8 + x_13_9 + x_13_10 + x_13_11 + x_13_12 + x_13_13 + x_13_14 
+ x_13_15 + x_13_16 + x_13_17 <= 2114
x_14_0 + x_14_1 + x_14_2 + x_14_3 + x_14_4 + x_14_5 + x_14_6 + x_14_7 
+ x_14_8 + x_14_9 + x_14_10 + x_14_11 + x_14_12 + x_14_13 + x_14_14 
+ x_14_15 + x_14_16 + x_14_17 <= 205
x_15_0 + x_15_1 + x_15_2 + x_15_3 + x_15_4 + x_15_5 + x_15_6 + x_15_7 
+ x_15_8 + x_15_9 + x_15_10 + x_15_11 + x_15_12 + x_15_13 + x_15_14 
+ x_15_15 + x_15_16 + x_15_17 <= 17326
x_16_0 + x_16_1 + x_16_2 + x_16_3 + x_16_4 + x_16_5 + x_16_6 + x_16_7 
+ x_16_8 + x_16_9 + x_16_10 + x_16_11 + x_16_12 + x_16_13 + x_16_14 
+ x_16_15 + x_16_16 + x_16_17 <= 22260
x_17_0 + x_17_1 + x_17_2 + x_17_3 + x_17_4 + x_17_5 + x_17_6 + x_17_7 
+ x_17_8 + x_17_9 + x_17_10 + x_17_11 + x_17_12 + x_17_13 + x_17_14 
+ x_17_15 + x_17_16 + x_17_17 <= 333"
1,M,FLP,"multiple supermarkets require inventory, and several suppliers located in different cities can provide the necessary goods. Each supplier incurs a fixed cost upon starting operations, with the fixed cost data provided in ""fixed_costs.csv."" Each supermarket needs to source a unit good from these suppliers. For each supermarket, the transportation cost per unit of goods from each supplier is recorded in ""transportation_costs.csv."" Demand information can be gained in 'demand.csv'. The objective is to determine which suppliers to open so that the demand of all supermarkets is met while minimizing the total cost. The decision variables y_i are binary, indicating whether a supplier is operational (open). The decision variables x_ij represent the quantity of goods that supermarket S_j sources from supplier F_i. For each supermarket, x_ij represents the proportion of the total supply obtained from different suppliers. These decision variables help determine the optimal allocation of supply to minimize the total of fixed and transportation costs.","Test_Dataset/Large-scale-or/FLP_testing/FLP1/demand.csv
Test_Dataset/Large-scale-or/FLP_testing/FLP1/fixed_cost.csv
Test_Dataset/Large-scale-or/FLP_testing/FLP1/transportation_costs.csv","Minimize
Minimize: 284.1076062070199 * x_0_0 + 53.78462189811974 * x_0_1 + 10.62090560834057 * x_0_2 + 111.2711755398883 * x_0_3 + 158.5040103182045 * x_0_4 + 8.787982793019472 * x_0_5 + 7.194814233061281 * x_1_0 + 1031.957542453403 * x_1_1 + 90.93959873299102 * x_1_2 + 276.971658748318 * x_1_3 + 0.4549516233279213 * x_1_4 + 0.1979221905240956 * x_1_5 + 151.1043284426327 * x_2_0 + 884.4794082106746 * x_2_1 + 4.331795692203521 * x_2_2 + 277.0378252634669 * x_2_3 + 0.3304138906459448 * x_2_4 + 0.1882811017498216 * x_2_5 + 144.1646128452777 * x_3_0 + 868.7467025334755 * x_3_1 + 94.19776272095284 * x_3_2 + 285.4799145422115 * x_3_3 + 16.92567348531588 * x_3_4 + 0.941350639699424 * x_3_5 + 7.178249750430858 * x_4_0 + 49.12869785052044 * x_4_1 + 90.72023810736934 * x_4_2 + 277.5663204098078 * x_4_3 + 0.3687704336460639 * x_4_4 + 0.584529831864118 * x_4_5 + 104.3770347621904 * x_5_0 + 1324.349911968438 * x_5_1 + 1829.387893606535 * x_5_2 + 1857.567859194988 * x_5_3 + 1782.69346352653 * x_5_4 + 2079.46686537067 * x_5_5
+ 98.87825202114394 y_0 + 99.73445279946765 y_1 + 94.00738781245316 y_2 
+ 93.77294394327284 y_3 + 112.6468046883122 y_4 + 97.05463247 y_5

Subject To
demand_constraint: 
x_0_0 + x_1_0 + x_2_0 + x_3_0 + x_4_0 + x_5_0 = 1097
x_1_0 + x_1_1 + x_2_1 + x_3_1 + x_4_1 + x_5_1 = 61
x_2_0 + x_1_2 + x_2_2 + x_3_2 + x_4_2 + x_5_2 = 11
x_3_0 + x_2_3 + x_3_3 + x_4_3 + x_5_3 = 7
x_4_0 + x_2_4 + x_3_4 + x_4_4 + x_5_4 = 82
x_5_0 + x_2_5 + x_3_5 + x_4_5 + x_5_5 = 37

x_ij >= 0

-1295 y_0 + x_0_0 + x_0_1 + x_0_2 + x_0_3 + x_0_4 + x_0_5 <= 0
-1295 y_1 + x_1_0 + x_1_1 + x_1_2 + x_1_3 + x_1_4 + x_1_5 <= 0
-1295 y_2 + x_2_0 + x_2_1 + x_2_2 + x_2_3 + x_2_4 + x_2_5 <= 0
-1295 y_3 + x_3_0 + x_3_2 + x_3_3 + x_3_4 + x_3_5 <= 0
-1295 y_4 + x_4_0 + x_4_2 + x_4_3 + x_4_4 + x_4_5 <= 0
-1295 y_5 + x_5_0 + x_5_2 + x_5_3 + x_5_4 + x_5_5 <= 0

Binaries
y_0 y_1 y_2 y_3 y_4 y_5 
END "
1,S,RA,"A small bakery in South Korea, and each day need to stock up on various types of bread. For each type of bread, we have an expected profit, which can be found in ""products.csv."" However, the shop has limited storage capacity, with details provided in ""capacity.csv."" Therefore, we must decide which types of bread to order each day to maximize our total expected profit while staying within our storage limits. The decision variables x_i represents the number of units of bread type i to be ordered each day.","Test_Dataset/Large-scale-or/RA_testing/RA1/BakerySales/Capacity.csv
Test_Dataset/Large-scale-or/RA_testing/RA1/BakerySales/Products.csv","Maximize
888 x_0_0 + 134 x_1_0 + 129 x_2_0 + 370 x_3_0 + 921 x_4_0 + 765 x_5_0 
+ 154 x_6_0 + 837 x_7_0 + 584 x_8_0 + 365 x_9_0 
Subject To
capacity_constraint: 4 x_0_0 + 2 x_1_0 + 4 x_2_0 + 3 x_3_0 + 2 x_4_0 
+ x_5_0 + 2 x_6_0 + x_7_0 + 3 x_8_0 + 3 x_9_0 <= 180
Generals
x_0_0  x_1_0  x_2_0  x_3_0  x_4_0  x_5_0  x_6_0  x_7_0  x_8_0  x_9_0"
1,M,NRM,"""The mobile device retailer specializes in a range of products (e.g., smartphones, feature phones), with revenue data detailed in the ""Revenue"" column. Demand exhibits heterogeneous patterns across regions (with independent fluctuations in markets such as North America, Europe, and Asia). The company seeks to maximize total expected revenue by optimizing order fulfillment strategies under constraints of fixed initial inventory (""Initial Inventory"" column), with no restocking or in-transit inventory permitted during the sales cycle.

Customer order inquiries arrive sequentially via a Poisson stochastic process (intensity parameters specified in the ""Demand"" column), where decision variables x_i denote the positive integer quantity of orders planned for fulfillment per product i. The core problem can be modeled as a stochastic programming framework that maps inventory allocation to revenue maximization under multi-regional demand uncertainty. This involves solving for resource distribution that achieves system-optimal marginal revenue yield under rigid inventory constraints.""",Test_Dataset/Large-scale-or/NRM_testing/NRM1/MobileSalesDataset.csv,"\Generated by Cardinal Operations

Maximize
1003.56 x_1 + 549.92 x_2 + 169.7 x_3 + 1285.81 x_4 + 1269.71 x_5 
+ 805.82 x_6 + 1134.19 x_7 + 1479.23 x_8 + 139.14 x_9 
+ 518.67 x_10 + 1088.57 x_11 + 371.56 x_12 + 956.78 x_13 + 1283.7 x_14 
+ 1184.54 x_15 + 377.8 x_16 + 701.97 x_17 + 875.91 x_18 + 951.85 x_19 
+ 869.95 x_20 + 887.05 x_21 + 1318.33 x_22 + 448.61 x_23 
+ 167.99 x_24 + 1068.1 x_25 + 872.16 x_26 + 483.26 x_27 + 1279.24 x_28 
+ 894.34 x_29 + 367.91 x_30 + 178.22 x_31 + 1030.8 x_32 + 479.44 x_33 
+ 973.62 x_34 + 1211.35 x_35 + 467.93 x_36 + 678.72 x_37 + 478.36 x_38 
+ 1196.95 x_39 + 1118.63 x_40 + 972.1 x_41 + 338.6 x_42 + 178.52 x_43 
+ 992.14 x_44 + 498.77 x_45 + 965.34 x_46 + 321.11 x_47 + 287.36 x_48 
+ 462.26 x_49 + 641.22 x_50 + 1136.87 x_51 + 1385.88 x_52 + 867.3 x_53 
+ 1175.92 x_54 + 153.61 x_55 + 753.55 x_56 + 245.81 x_57 + 507.13 x_58 
+ 513.64 x_59 + 1316.82 x_60 + 1409.21 x_61 + 1237.37 x_62 
+ 1042.66 x_63 + 156.02 x_64 + 728.62 x_65 + 971.92 x_66 
+ 1128.07 x_67 + 256.42 x_68 + 1064.72 x_69 + 348.43 x_70 + 1183.94 x_71 
Subject To
inventory_constraint: x_1 <= 80
x_2 <= 40
x_3 <= 560
x_4 <= 820
x_5 <= 960
x_6 <= 850
x_7 <= 950
x_8 <= 360
x_9 <= 580
x_10 <= 800
x_11 <= 340
x_12 <= 30
x_13 <= 990
x_14 <= 70
x_15 <= 890
x_16 <= 240
x_17 <= 290
x_18 <= 40
x_19 <= 300
x_20 <= 350
x_21 <= 600
x_22 <= 610
x_23 <= 160
x_24 <= 260
x_25 <= 480
x_26 <= 200
x_27 <= 290
x_28 <= 350
x_29 <= 900
x_30 <= 760
x_31 <= 440
x_32 <= 170
x_33 <= 600
x_34 <= 920
x_35 <= 240
x_36 <= 190
x_37 <= 600
x_38 <= 760
x_39 <= 850
x_40 <= 50
x_41 <= 470
x_42 <= 790
x_43 <= 580
x_44 <= 880
x_45 <= 170
x_46 <= 790
x_47 <= 500
x_48 <= 890
x_49 <= 680
x_50 <= 250
x_51 <= 170
x_52 <= 830
x_53 <= 680
x_54 <= 590
x_55 <= 700
x_56 <= 830
x_57 <= 360
x_58 <= 570
x_59 <= 510
x_60 <= 690
x_61 <= 760
x_62 <= 270
x_63 <= 880
x_64 <= 470
x_65 <= 670
x_66 <= 620
x_67 <= 310
x_68 <= 670
x_69 <= 150
x_70 <= 440
x_71 <= 210
demand_constraint: x_1 <= 10
x_2 <= 6
x_3 <= 75
x_4 <= 121
x_5 <= 130
x_6 <= 112
x_7 <= 125
x_8 <= 54
x_9 <= 75
x_10 <= 102
x_11 <= 48
x_12 <= 4
x_13 <= 125
x_14 <= 9
x_15 <= 132
x_16 <= 29
x_17 <= 43
x_18 <= 5
x_19 <= 40
x_20 <= 48
x_21 <= 87
x_22 <= 79
x_23 <= 20
x_24 <= 33
x_25 <= 60
x_26 <= 25
x_27 <= 42
x_28 <= 52
x_29 <= 116
x_30 <= 95
x_31 <= 66
x_32 <= 25
x_33 <= 78
x_34 <= 138
x_35 <= 32
x_36 <= 28
x_37 <= 84
x_38 <= 102
x_39 <= 112
x_40 <= 7
x_41 <= 62
x_42 <= 109
x_43 <= 81
x_44 <= 131
x_45 <= 26
x_46 <= 109
x_47 <= 65
x_48 <= 121
x_49 <= 90
x_50 <= 31
x_51 <= 24
x_52 <= 122
x_53 <= 101
x_54 <= 76
x_55 <= 100
x_56 <= 125
x_57 <= 45
x_58 <= 80
x_59 <= 64
x_60 <= 98
x_61 <= 102
x_62 <= 40
x_63 <= 110
x_64 <= 59
x_65 <= 97
x_66 <= 90
x_67 <= 43
x_68 <= 96
x_69 <= 21
x_70 <= 55
x_71 <= 30
Generals
x_1 x_2 x_3 x_4 x_5 x_6 x_7 x_8 x_9 x_10 x_11 x_12 x_13 x_14 
x_15 x_16 x_17 x_18 x_19 x_20 x_21 x_22 x_23 x_24 x_25 x_26 
x_27 x_28 x_29 x_30 x_31 x_32 x_33 x_34 x_35 x_36 x_37 x_38 
x_39 x_40 x_41 x_42 x_43 x_44 x_45 x_46 x_47 x_48 x_49 x_50 
x_51 x_52 x_53 x_54 x_55 x_56 x_57 x_58 x_59 x_60 x_61 x_62 
x_63 x_64 x_65 x_66 x_67 x_68 x_69 x_70 x_71 
END  "
1,S,AP,"We have a set of engineers and a set of projects. Each engineer incurs different costs to complete different projects, reflecting their familiarity and efficiency with each task. The cost information for each engineer and project is saved in the CSV file ""engineer_project_costs.csv"", where each row represents an engineer, and each column represents the cost for that engineer to complete a specific project. The goal is to find an assignment method that minimizes the total cost of completing all projects, ensuring that each engineer is assigned to exactly one project and each project is assigned to exactly one engineer, while minimizing the cost for each engineer to complete the assigned project. ",Test_Dataset/Large-scale-or/AP_testing/AP1/engineer_project_costs.csv,"Minimize
5 x_11 + 7 x_12 + 8 x_21 + 5 x_22
Subject To
x_11 + x_12 = 10
x_21 + x_22 = 10
x_11 - x_21 = 0
x_12 - x_22 = 0
x_11 <= 4
x_12 <= 7; 
x_21 <= 8; 
x_22 <= 6; 
x_ij >= 0"
